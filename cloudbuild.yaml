steps:
# Step 0: Install Python dependencies from your requirements.txt file.
- name: 'debian:stable'
  id: 'Update and Install Curl'
  entrypoint: 'bash'
  args:
    - '-c'
    - 'apt-get update && apt-get install -y curl'

# Step 1: Install Python dependencies from your requirements.txt file.
- name: 'python:3.13.3-slim'
  id: 'Install Dependencies'
  entrypoint: 'pip'
  args: ['install', '-r', 'requirements.txt', '--user']

# Step 2: Run local evaluation tests before deploying.
- name: 'python:3.13.3-slim'
  id: 'Run Local Evaluation'
  entrypoint: 'python'
  env:
    - 'GOOGLE_CLOUD_PROJECT=$PROJECT_ID'
    - 'GOOGLE_CLOUD_LOCATION=us-central1'
    - 'GOOGLE_CLOUD_STORAGE_BUCKET=gcp-basic-371423-vertex-staging'
  args: ['-m', 'pytest', 'tests/test_local_evaluation.py']

# Step 3: Run your Python script to deploy the agent to Agent Engine and capture the output.
- name: 'python:3.13.3-slim'
  id: 'Deploy to AgentEngine'
  entrypoint: 'bash'
  args:
    - -c
    - |
      set -eo pipefail
      python deploy.py --create \
        --project_id="$PROJECT_ID" \
        --location="us-central1" \
        --bucket="gcp-basic-371423-vertex-staging" \
      2>&1 | tee /dev/stderr | \
      grep 'Created remote agent:' | \
      awk '{print $4}' > /workspace/reasoning_engine_id.txt


# Step 4: Run post-deployment evaluation on the live agent.
- name: 'python:3.13.3-slim'
  id: 'Post Deploy Evaluation'
  entrypoint: 'bash'
  env:
    - 'GOOGLE_CLOUD_PROJECT=$PROJECT_ID'
    - 'GOOGLE_CLOUD_LOCATION=us-central1'
    - 'GOOGLE_CLOUD_STORAGE_BUCKET=gcp-basic-371423-vertex-staging'
  args:
    - -c
    - |
      set -eo pipefail
      export REASONING_ENGINE_ID=$(cat /workspace/reasoning_engine_id.txt)
      if [ -z "$$REASONING_ENGINE_ID" ]; then
        echo "ERROR: Reasoning Engine ID could not be found for post-deploy evaluation!"
        exit 1
      fi
      echo "Running post-deployment evaluation on agent: $$REASONING_ENGINE_ID"
      python PostDeployEvaluation.py

# Step 5: Read the ID from the file and use it to register the agent in Agent Space.
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
  id: 'Register in AgentSpace'
  entrypoint: 'bash'
  args:
    - -c
    - |
      set -eo pipefail
      REASONING_ENGINE_ID=$(cat /workspace/reasoning_engine_id.txt)
      APP_ID="agentspace-de-agent-testin_1747856989394"

      # A safety check to ensure the ID was actually captured.
      if [ -z "$$REASONING_ENGINE_ID" ]; then
        echo "ERROR: Reasoning Engine ID could not be found!"
        exit 1
      fi

      # Execute the curl command, substituting the shell variable into the JSON payload.
      curl -X POST \
      -H "Authorization: Bearer $(gcloud auth print-access-token)" \
      -H "Content-Type: application/json" \
      -H "X-Goog-User-Project: $PROJECT_ID" \
      -d '{
        "displayName": "New Custom Agent",
        "description": "Agent for current location",
        "icon": {
          "uri": "https://www.gstatic.com/marketing-cms/assets/images/3d/24/88d3db994ac296ff541ca1b31674/google-health-studies.webp=s96-fcrop64=1,00000000ffffffff-rw"
        },
        "adk_agent_definition": {
          "tool_settings": {
            "tool_description": "Use this tool to get information on weather and time of a particular city"
          },
          "provisioned_reasoning_engine": {
            "reasoning_engine": "'$$REASONING_ENGINE_ID'"
          }
        }
      }' \
      "https://discoveryengine.googleapis.com/v1alpha/projects/$PROJECT_ID/locations/global/collections/default_collection/engines/$$APP_ID/assistants/default_assistant/agents"

# Optional: Set a timeout for the entire build process.
timeout: '1200s'